/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.mydsl1.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl1.services.MyDslGrammarAccess;

}

@parser::members {
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
(rule__Feature__Alternatives)
{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSolitaryFeature
entryRuleSolitaryFeature 
:
{ before(grammarAccess.getSolitaryFeatureRule()); }
	 ruleSolitaryFeature
{ after(grammarAccess.getSolitaryFeatureRule()); } 
	 EOF 
;

// Rule SolitaryFeature
ruleSolitaryFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getGroup()); }
(rule__SolitaryFeature__Group__0)
{ after(grammarAccess.getSolitaryFeatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroup
entryRuleGroup 
:
{ before(grammarAccess.getGroupRule()); }
	 ruleGroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule Group
ruleGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupAccess().getGroup()); }
(rule__Group__Group__0)
{ after(grammarAccess.getGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroupedFeature
entryRuleGroupedFeature 
:
{ before(grammarAccess.getGroupedFeatureRule()); }
	 ruleGroupedFeature
{ after(grammarAccess.getGroupedFeatureRule()); } 
	 EOF 
;

// Rule GroupedFeature
ruleGroupedFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupedFeatureAccess().getGroup()); }
(rule__GroupedFeature__Group__0)
{ after(grammarAccess.getGroupedFeatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogical2Operation
entryRuleLogical2Operation 
:
{ before(grammarAccess.getLogical2OperationRule()); }
	 ruleLogical2Operation
{ after(grammarAccess.getLogical2OperationRule()); } 
	 EOF 
;

// Rule Logical2Operation
ruleLogical2Operation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogical2OperationAccess().getGroup()); }
(rule__Logical2Operation__Group__0)
{ after(grammarAccess.getLogical2OperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryOperation
entryRuleBinaryOperation 
:
{ before(grammarAccess.getBinaryOperationRule()); }
	 ruleBinaryOperation
{ after(grammarAccess.getBinaryOperationRule()); } 
	 EOF 
;

// Rule BinaryOperation
ruleBinaryOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryOperationAccess().getGroup()); }
(rule__BinaryOperation__Group__0)
{ after(grammarAccess.getBinaryOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOperation
entryRuleUnaryOperation 
:
{ before(grammarAccess.getUnaryOperationRule()); }
	 ruleUnaryOperation
{ after(grammarAccess.getUnaryOperationRule()); } 
	 EOF 
;

// Rule UnaryOperation
ruleUnaryOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryOperationAccess().getGroup()); }
(rule__UnaryOperation__Group__0)
{ after(grammarAccess.getUnaryOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicExp
entryRuleAtomicExp 
:
{ before(grammarAccess.getAtomicExpRule()); }
	 ruleAtomicExp
{ after(grammarAccess.getAtomicExpRule()); } 
	 EOF 
;

// Rule AtomicExp
ruleAtomicExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicExpAccess().getAlternatives()); }
(rule__AtomicExp__Alternatives)
{ after(grammarAccess.getAtomicExpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNULL
entryRuleNULL 
:
{ before(grammarAccess.getNULLRule()); }
	 ruleNULL
{ after(grammarAccess.getNULLRule()); } 
	 EOF 
;

// Rule NULL
ruleNULL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNULLAccess().getGroup()); }
(rule__NULL__Group__0)
{ after(grammarAccess.getNULLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getValueAssignment()); }
(rule__Number__ValueAssignment)
{ after(grammarAccess.getNumberAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifier
entryRuleIdentifier 
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule Identifier
ruleIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierAccess().getRefAssignment()); }
(rule__Identifier__RefAssignment)
{ after(grammarAccess.getIdentifierAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getGroup()); }
(rule__EInt__Group__0)
{ after(grammarAccess.getEIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEBoolean
entryRuleEBoolean 
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
(rule__EBoolean__Alternatives)
{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule LogicalOperator
ruleLogicalOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOperatorAccess().getAlternatives()); }
(rule__LogicalOperator__Alternatives)
{ after(grammarAccess.getLogicalOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompareOperator
ruleCompareOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
(rule__CompareOperator__Alternatives)
{ after(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ArithmicOperator
ruleArithmicOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmicOperatorAccess().getAlternatives()); }
(rule__ArithmicOperator__Alternatives)
{ after(grammarAccess.getArithmicOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UnaryOperator
ruleUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
(rule__UnaryOperator__Alternatives)
{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule SimpleType
ruleSimpleType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getAlternatives()); }
(rule__SimpleType__Alternatives)
{ after(grammarAccess.getSimpleTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule SolitaryType
ruleSolitaryType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryTypeAccess().getAlternatives()); }
(rule__SolitaryType__Alternatives)
{ after(grammarAccess.getSolitaryTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Feature__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getSolitaryFeatureParserRuleCall_0()); }
	ruleSolitaryFeature
{ after(grammarAccess.getFeatureAccess().getSolitaryFeatureParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureAccess().getGroupedFeatureParserRuleCall_1()); }
	ruleGroupedFeature
{ after(grammarAccess.getFeatureAccess().getGroupedFeatureParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getGroup_3_0()); }
(rule__SolitaryFeature__Group_3_0__0)
{ after(grammarAccess.getSolitaryFeatureAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getSolitaryFeatureAccess().getGroup_3_1()); }
(rule__SolitaryFeature__Group_3_1__0)
{ after(grammarAccess.getSolitaryFeatureAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getGroup_2_0()); }
(rule__GroupedFeature__Group_2_0__0)
{ after(grammarAccess.getGroupedFeatureAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getGroupedFeatureAccess().getGroup_2_1()); }
(rule__GroupedFeature__Group_2_1__0)
{ after(grammarAccess.getGroupedFeatureAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getNULLParserRuleCall_0()); }
	ruleNULL
{ after(grammarAccess.getAtomicExpAccess().getNULLParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getNumberParserRuleCall_1()); }
	ruleNumber
{ after(grammarAccess.getAtomicExpAccess().getNumberParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getIdentifierParserRuleCall_2()); }
	ruleIdentifier
{ after(grammarAccess.getAtomicExpAccess().getIdentifierParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getGroup_3()); }
(rule__AtomicExp__Group_3__0)
{ after(grammarAccess.getAtomicExpAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getUnaryOperationParserRuleCall_4()); }
	ruleUnaryOperation
{ after(grammarAccess.getAtomicExpAccess().getUnaryOperationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getEBooleanParserRuleCall_5()); }
	ruleEBoolean
{ after(grammarAccess.getAtomicExpAccess().getEBooleanParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOperatorAccess().getAndEnumLiteralDeclaration_0()); }
(	'And' 
)
{ after(grammarAccess.getLogicalOperatorAccess().getAndEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getLogicalOperatorAccess().getOrEnumLiteralDeclaration_1()); }
(	'Or' 
)
{ after(grammarAccess.getLogicalOperatorAccess().getOrEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getEqualsEnumLiteralDeclaration_0()); }
(	'Equals' 
)
{ after(grammarAccess.getCompareOperatorAccess().getEqualsEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getHigherEnumLiteralDeclaration_1()); }
(	'Higher' 
)
{ after(grammarAccess.getCompareOperatorAccess().getHigherEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLowerEnumLiteralDeclaration_2()); }
(	'Lower' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLowerEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmicOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmicOperatorAccess().getAddEnumLiteralDeclaration_0()); }
(	'Add' 
)
{ after(grammarAccess.getArithmicOperatorAccess().getAddEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getArithmicOperatorAccess().getSubtractEnumLiteralDeclaration_1()); }
(	'Subtract' 
)
{ after(grammarAccess.getArithmicOperatorAccess().getSubtractEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getArithmicOperatorAccess().getDivideEnumLiteralDeclaration_2()); }
(	'Divide' 
)
{ after(grammarAccess.getArithmicOperatorAccess().getDivideEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getArithmicOperatorAccess().getMultiplyEnumLiteralDeclaration_3()); }
(	'Multiply' 
)
{ after(grammarAccess.getArithmicOperatorAccess().getMultiplyEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getNotEnumLiteralDeclaration_0()); }
(	'Not' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getNotEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getMinusEnumLiteralDeclaration_1()); }
(	'Minus' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getMinusEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getBooleanEnumLiteralDeclaration_0()); }
(	'boolean' 
)
{ after(grammarAccess.getSimpleTypeAccess().getBooleanEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getIntEnumLiteralDeclaration_1()); }
(	'int' 
)
{ after(grammarAccess.getSimpleTypeAccess().getIntEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getDoubleEnumLiteralDeclaration_2()); }
(	'double' 
)
{ after(grammarAccess.getSimpleTypeAccess().getDoubleEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getStringEnumLiteralDeclaration_3()); }
(	'String' 
)
{ after(grammarAccess.getSimpleTypeAccess().getStringEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryTypeAccess().getOptionalEnumLiteralDeclaration_0()); }
(	'Optional' 
)
{ after(grammarAccess.getSolitaryTypeAccess().getOptionalEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getSolitaryTypeAccess().getMandatoryEnumLiteralDeclaration_1()); }
(	'Mandatory' 
)
{ after(grammarAccess.getSolitaryTypeAccess().getMandatoryEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelAction_0()); }
(

)
{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelKeyword_1()); }

	'Model' 

{ after(grammarAccess.getModelAccess().getModelKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_3()); }
(rule__Model__Group_3__0)?
{ after(grammarAccess.getModelAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Model__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3__0__Impl
	rule__Model__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRootKeyword_3_0()); }

	'Root' 

{ after(grammarAccess.getModelAccess().getRootKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3__1__Impl
	rule__Model__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRootFeatureAssignment_3_1()); }
(rule__Model__RootFeatureAssignment_3_1)
{ after(grammarAccess.getModelAccess().getRootFeatureAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_3_2()); }
(rule__Model__Group_3_2__0)*
{ after(grammarAccess.getModelAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Model__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3_2__0__Impl
	rule__Model__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRootKeyword_3_2_0()); }

	'Root' 

{ after(grammarAccess.getModelAccess().getRootKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRootFeatureAssignment_3_2_1()); }
(rule__Model__RootFeatureAssignment_3_2_1)
{ after(grammarAccess.getModelAccess().getRootFeatureAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SolitaryFeature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group__0__Impl
	rule__SolitaryFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getFeatureKeyword_0()); }

	'feature' 

{ after(grammarAccess.getSolitaryFeatureAccess().getFeatureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group__1__Impl
	rule__SolitaryFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getRequiredAssignment_1()); }
(rule__SolitaryFeature__RequiredAssignment_1)?
{ after(grammarAccess.getSolitaryFeatureAccess().getRequiredAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group__2__Impl
	rule__SolitaryFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getNameAssignment_2()); }
(rule__SolitaryFeature__NameAssignment_2)
{ after(grammarAccess.getSolitaryFeatureAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getAlternatives_3()); }
(rule__SolitaryFeature__Alternatives_3)?
{ after(grammarAccess.getSolitaryFeatureAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SolitaryFeature__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0__0__Impl
	rule__SolitaryFeature__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getEqualsSignGreaterThanSignKeyword_3_0_0()); }

	'=>' 

{ after(grammarAccess.getSolitaryFeatureAccess().getEqualsSignGreaterThanSignKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0__1__Impl
	rule__SolitaryFeature__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getGroup_3_0_1()); }
(rule__SolitaryFeature__Group_3_0_1__0)?
{ after(grammarAccess.getSolitaryFeatureAccess().getGroup_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0__2__Impl
	rule__SolitaryFeature__Group_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getGroup_3_0_2()); }
(rule__SolitaryFeature__Group_3_0_2__0)?
{ after(grammarAccess.getSolitaryFeatureAccess().getGroup_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0__3__Impl
	rule__SolitaryFeature__Group_3_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getGroup_3_0_3()); }
(rule__SolitaryFeature__Group_3_0_3__0)?
{ after(grammarAccess.getSolitaryFeatureAccess().getGroup_3_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0__4__Impl
	rule__SolitaryFeature__Group_3_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getGroup_3_0_4()); }
(rule__SolitaryFeature__Group_3_0_4__0)?
{ after(grammarAccess.getSolitaryFeatureAccess().getGroup_3_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getSemicolonKeyword_3_0_5()); }

	';' 

{ after(grammarAccess.getSolitaryFeatureAccess().getSemicolonKeyword_3_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SolitaryFeature__Group_3_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_1__0__Impl
	rule__SolitaryFeature__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getTypeKeyword_3_0_1_0()); }

	'type' 

{ after(grammarAccess.getSolitaryFeatureAccess().getTypeKeyword_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getTypeAssignment_3_0_1_1()); }
(rule__SolitaryFeature__TypeAssignment_3_0_1_1)
{ after(grammarAccess.getSolitaryFeatureAccess().getTypeAssignment_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SolitaryFeature__Group_3_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_2__0__Impl
	rule__SolitaryFeature__Group_3_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getFeaturesAssignment_3_0_2_0()); }
(rule__SolitaryFeature__FeaturesAssignment_3_0_2_0)
{ after(grammarAccess.getSolitaryFeatureAccess().getFeaturesAssignment_3_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getFeaturesAssignment_3_0_2_1()); }
(rule__SolitaryFeature__FeaturesAssignment_3_0_2_1)*
{ after(grammarAccess.getSolitaryFeatureAccess().getFeaturesAssignment_3_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SolitaryFeature__Group_3_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_3__0__Impl
	rule__SolitaryFeature__Group_3_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getGroupsAssignment_3_0_3_0()); }
(rule__SolitaryFeature__GroupsAssignment_3_0_3_0)
{ after(grammarAccess.getSolitaryFeatureAccess().getGroupsAssignment_3_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getGroupsAssignment_3_0_3_1()); }
(rule__SolitaryFeature__GroupsAssignment_3_0_3_1)*
{ after(grammarAccess.getSolitaryFeatureAccess().getGroupsAssignment_3_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SolitaryFeature__Group_3_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_4__0__Impl
	rule__SolitaryFeature__Group_3_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getNumberSignKeyword_3_0_4_0()); }

	'#' 

{ after(grammarAccess.getSolitaryFeatureAccess().getNumberSignKeyword_3_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_4__1__Impl
	rule__SolitaryFeature__Group_3_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getConstraintsAssignment_3_0_4_1()); }
(rule__SolitaryFeature__ConstraintsAssignment_3_0_4_1)
{ after(grammarAccess.getSolitaryFeatureAccess().getConstraintsAssignment_3_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_4__2__Impl
	rule__SolitaryFeature__Group_3_0_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getNumberSignKeyword_3_0_4_2()); }

	'#' 

{ after(grammarAccess.getSolitaryFeatureAccess().getNumberSignKeyword_3_0_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getGroup_3_0_4_3()); }
(rule__SolitaryFeature__Group_3_0_4_3__0)*
{ after(grammarAccess.getSolitaryFeatureAccess().getGroup_3_0_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SolitaryFeature__Group_3_0_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_4_3__0__Impl
	rule__SolitaryFeature__Group_3_0_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getNumberSignKeyword_3_0_4_3_0()); }

	'#' 

{ after(grammarAccess.getSolitaryFeatureAccess().getNumberSignKeyword_3_0_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_4_3__1__Impl
	rule__SolitaryFeature__Group_3_0_4_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getConstraintsAssignment_3_0_4_3_1()); }
(rule__SolitaryFeature__ConstraintsAssignment_3_0_4_3_1)
{ after(grammarAccess.getSolitaryFeatureAccess().getConstraintsAssignment_3_0_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_0_4_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_0_4_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_0_4_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getNumberSignKeyword_3_0_4_3_2()); }

	'#' 

{ after(grammarAccess.getSolitaryFeatureAccess().getNumberSignKeyword_3_0_4_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SolitaryFeature__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_1__0__Impl
	rule__SolitaryFeature__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getEqualsSignKeyword_3_1_0()); }

	'=' 

{ after(grammarAccess.getSolitaryFeatureAccess().getEqualsSignKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SolitaryFeature__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SolitaryFeature__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getConstraintsAssignment_3_1_1()); }
(rule__SolitaryFeature__ConstraintsAssignment_3_1_1)
{ after(grammarAccess.getSolitaryFeatureAccess().getConstraintsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Group__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__0__Impl
	rule__Group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getSelectKeyword_0()); }

	'select' 

{ after(grammarAccess.getGroupAccess().getSelectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__1__Impl
	rule__Group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getInclusiveAssignment_1()); }
(rule__Group__InclusiveAssignment_1)?
{ after(grammarAccess.getGroupAccess().getInclusiveAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__2__Impl
	rule__Group__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroupedFeaturesAssignment_2()); }
(rule__Group__GroupedFeaturesAssignment_2)
{ after(grammarAccess.getGroupAccess().getGroupedFeaturesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__3__Impl
	rule__Group__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroup_3()); }
(rule__Group__Group_3__0)*
{ after(grammarAccess.getGroupAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getGroupAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Group__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group_3__0__Impl
	rule__Group__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getGroupAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroupedFeaturesAssignment_3_1()); }
(rule__Group__GroupedFeaturesAssignment_3_1)
{ after(grammarAccess.getGroupAccess().getGroupedFeaturesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GroupedFeature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group__0__Impl
	rule__GroupedFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getGroupedFeatureAction_0()); }
(

)
{ after(grammarAccess.getGroupedFeatureAccess().getGroupedFeatureAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group__1__Impl
	rule__GroupedFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getNameAssignment_1()); }
(rule__GroupedFeature__NameAssignment_1)
{ after(grammarAccess.getGroupedFeatureAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getAlternatives_2()); }
(rule__GroupedFeature__Alternatives_2)?
{ after(grammarAccess.getGroupedFeatureAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GroupedFeature__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0__0__Impl
	rule__GroupedFeature__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getEqualsSignGreaterThanSignKeyword_2_0_0()); }

	'=>' 

{ after(grammarAccess.getGroupedFeatureAccess().getEqualsSignGreaterThanSignKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0__1__Impl
	rule__GroupedFeature__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getGroup_2_0_1()); }
(rule__GroupedFeature__Group_2_0_1__0)?
{ after(grammarAccess.getGroupedFeatureAccess().getGroup_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0__2__Impl
	rule__GroupedFeature__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getGroup_2_0_2()); }
(rule__GroupedFeature__Group_2_0_2__0)?
{ after(grammarAccess.getGroupedFeatureAccess().getGroup_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0__3__Impl
	rule__GroupedFeature__Group_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getGroup_2_0_3()); }
(rule__GroupedFeature__Group_2_0_3__0)?
{ after(grammarAccess.getGroupedFeatureAccess().getGroup_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0__4__Impl
	rule__GroupedFeature__Group_2_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getGroup_2_0_4()); }
(rule__GroupedFeature__Group_2_0_4__0)?
{ after(grammarAccess.getGroupedFeatureAccess().getGroup_2_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getSemicolonKeyword_2_0_5()); }

	';' 

{ after(grammarAccess.getGroupedFeatureAccess().getSemicolonKeyword_2_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__GroupedFeature__Group_2_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_1__0__Impl
	rule__GroupedFeature__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getTypeKeyword_2_0_1_0()); }

	'type' 

{ after(grammarAccess.getGroupedFeatureAccess().getTypeKeyword_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getTypeAssignment_2_0_1_1()); }
(rule__GroupedFeature__TypeAssignment_2_0_1_1)
{ after(grammarAccess.getGroupedFeatureAccess().getTypeAssignment_2_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GroupedFeature__Group_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_2__0__Impl
	rule__GroupedFeature__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getGroupsAssignment_2_0_2_0()); }
(rule__GroupedFeature__GroupsAssignment_2_0_2_0)
{ after(grammarAccess.getGroupedFeatureAccess().getGroupsAssignment_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getGroupsAssignment_2_0_2_1()); }
(rule__GroupedFeature__GroupsAssignment_2_0_2_1)*
{ after(grammarAccess.getGroupedFeatureAccess().getGroupsAssignment_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GroupedFeature__Group_2_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_3__0__Impl
	rule__GroupedFeature__Group_2_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getFeaturesAssignment_2_0_3_0()); }
(rule__GroupedFeature__FeaturesAssignment_2_0_3_0)
{ after(grammarAccess.getGroupedFeatureAccess().getFeaturesAssignment_2_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getFeaturesAssignment_2_0_3_1()); }
(rule__GroupedFeature__FeaturesAssignment_2_0_3_1)*
{ after(grammarAccess.getGroupedFeatureAccess().getFeaturesAssignment_2_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GroupedFeature__Group_2_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_4__0__Impl
	rule__GroupedFeature__Group_2_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getNumberSignKeyword_2_0_4_0()); }

	'#' 

{ after(grammarAccess.getGroupedFeatureAccess().getNumberSignKeyword_2_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_4__1__Impl
	rule__GroupedFeature__Group_2_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getConstraintsAssignment_2_0_4_1()); }
(rule__GroupedFeature__ConstraintsAssignment_2_0_4_1)
{ after(grammarAccess.getGroupedFeatureAccess().getConstraintsAssignment_2_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_4__2__Impl
	rule__GroupedFeature__Group_2_0_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getNumberSignKeyword_2_0_4_2()); }

	'#' 

{ after(grammarAccess.getGroupedFeatureAccess().getNumberSignKeyword_2_0_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getGroup_2_0_4_3()); }
(rule__GroupedFeature__Group_2_0_4_3__0)*
{ after(grammarAccess.getGroupedFeatureAccess().getGroup_2_0_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GroupedFeature__Group_2_0_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_4_3__0__Impl
	rule__GroupedFeature__Group_2_0_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getNumberSignKeyword_2_0_4_3_0()); }

	'#' 

{ after(grammarAccess.getGroupedFeatureAccess().getNumberSignKeyword_2_0_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_4_3__1__Impl
	rule__GroupedFeature__Group_2_0_4_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getConstraintsAssignment_2_0_4_3_1()); }
(rule__GroupedFeature__ConstraintsAssignment_2_0_4_3_1)
{ after(grammarAccess.getGroupedFeatureAccess().getConstraintsAssignment_2_0_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_0_4_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_0_4_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_0_4_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getNumberSignKeyword_2_0_4_3_2()); }

	'#' 

{ after(grammarAccess.getGroupedFeatureAccess().getNumberSignKeyword_2_0_4_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GroupedFeature__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_1__0__Impl
	rule__GroupedFeature__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getEqualsSignKeyword_2_1_0()); }

	'=' 

{ after(grammarAccess.getGroupedFeatureAccess().getEqualsSignKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupedFeature__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupedFeature__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getConstraintsAssignment_2_1_1()); }
(rule__GroupedFeature__ConstraintsAssignment_2_1_1)
{ after(grammarAccess.getGroupedFeatureAccess().getConstraintsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLogical2OperationParserRuleCall_0()); }
	ruleLogical2Operation
{ after(grammarAccess.getExpressionAccess().getLogical2OperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)*
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBinaryOperationLexpAction_1_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getBinaryOperationLexpAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperatorAssignment_1_1()); }
(rule__Expression__OperatorAssignment_1_1)
{ after(grammarAccess.getExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRexpAssignment_1_2()); }
(rule__Expression__RexpAssignment_1_2)
{ after(grammarAccess.getExpressionAccess().getRexpAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Logical2Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical2Operation__Group__0__Impl
	rule__Logical2Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical2Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical2OperationAccess().getBinaryOperationParserRuleCall_0()); }
	ruleBinaryOperation
{ after(grammarAccess.getLogical2OperationAccess().getBinaryOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical2Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical2Operation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical2Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical2OperationAccess().getGroup_1()); }
(rule__Logical2Operation__Group_1__0)*
{ after(grammarAccess.getLogical2OperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical2Operation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical2Operation__Group_1__0__Impl
	rule__Logical2Operation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical2Operation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical2OperationAccess().getBinaryOperationLexpAction_1_0()); }
(

)
{ after(grammarAccess.getLogical2OperationAccess().getBinaryOperationLexpAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical2Operation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical2Operation__Group_1__1__Impl
	rule__Logical2Operation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical2Operation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical2OperationAccess().getOperatorAssignment_1_1()); }
(rule__Logical2Operation__OperatorAssignment_1_1)
{ after(grammarAccess.getLogical2OperationAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical2Operation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical2Operation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical2Operation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical2OperationAccess().getRexpAssignment_1_2()); }
(rule__Logical2Operation__RexpAssignment_1_2)
{ after(grammarAccess.getLogical2OperationAccess().getRexpAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BinaryOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperation__Group__0__Impl
	rule__BinaryOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperationAccess().getAtomicExpParserRuleCall_0()); }
	ruleAtomicExp
{ after(grammarAccess.getBinaryOperationAccess().getAtomicExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperationAccess().getGroup_1()); }
(rule__BinaryOperation__Group_1__0)*
{ after(grammarAccess.getBinaryOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BinaryOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperation__Group_1__0__Impl
	rule__BinaryOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperationAccess().getBinaryOperationLexpAction_1_0()); }
(

)
{ after(grammarAccess.getBinaryOperationAccess().getBinaryOperationLexpAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperation__Group_1__1__Impl
	rule__BinaryOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperationAccess().getOperatorAssignment_1_1()); }
(rule__BinaryOperation__OperatorAssignment_1_1)
{ after(grammarAccess.getBinaryOperationAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperationAccess().getRexpAssignment_1_2()); }
(rule__BinaryOperation__RexpAssignment_1_2)
{ after(grammarAccess.getBinaryOperationAccess().getRexpAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group__0__Impl
	rule__UnaryOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getOperatorAssignment_0()); }
(rule__UnaryOperation__OperatorAssignment_0)
{ after(grammarAccess.getUnaryOperationAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getExpAssignment_1()); }
(rule__UnaryOperation__ExpAssignment_1)
{ after(grammarAccess.getUnaryOperationAccess().getExpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExp__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_3__0__Impl
	rule__AtomicExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getAtomicExpAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_3__1__Impl
	rule__AtomicExp__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getExpressionParserRuleCall_3_1()); }
	ruleExpression
{ after(grammarAccess.getAtomicExpAccess().getExpressionParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getAtomicExpAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NULL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NULL__Group__0__Impl
	rule__NULL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NULL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNULLAccess().getNULLAction_0()); }
(

)
{ after(grammarAccess.getNULLAccess().getNULLAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NULL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NULL__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NULL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNULLAccess().getNULLKeyword_1()); }

	'NULL' 

{ after(grammarAccess.getNULLAccess().getNULLKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__RootFeatureAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRootFeatureFeatureParserRuleCall_3_1_0()); }
	ruleFeature{ after(grammarAccess.getModelAccess().getRootFeatureFeatureParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RootFeatureAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRootFeatureFeatureParserRuleCall_3_2_1_0()); }
	ruleFeature{ after(grammarAccess.getModelAccess().getRootFeatureFeatureParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__RequiredAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getRequiredSolitaryTypeEnumRuleCall_1_0()); }
	ruleSolitaryType{ after(grammarAccess.getSolitaryFeatureAccess().getRequiredSolitaryTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getSolitaryFeatureAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__TypeAssignment_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getTypeSimpleTypeEnumRuleCall_3_0_1_1_0()); }
	ruleSimpleType{ after(grammarAccess.getSolitaryFeatureAccess().getTypeSimpleTypeEnumRuleCall_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__FeaturesAssignment_3_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getFeaturesSolitaryFeatureParserRuleCall_3_0_2_0_0()); }
	ruleSolitaryFeature{ after(grammarAccess.getSolitaryFeatureAccess().getFeaturesSolitaryFeatureParserRuleCall_3_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__FeaturesAssignment_3_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getFeaturesSolitaryFeatureParserRuleCall_3_0_2_1_0()); }
	ruleSolitaryFeature{ after(grammarAccess.getSolitaryFeatureAccess().getFeaturesSolitaryFeatureParserRuleCall_3_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__GroupsAssignment_3_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getGroupsGroupParserRuleCall_3_0_3_0_0()); }
	ruleGroup{ after(grammarAccess.getSolitaryFeatureAccess().getGroupsGroupParserRuleCall_3_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__GroupsAssignment_3_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getGroupsGroupParserRuleCall_3_0_3_1_0()); }
	ruleGroup{ after(grammarAccess.getSolitaryFeatureAccess().getGroupsGroupParserRuleCall_3_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__ConstraintsAssignment_3_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getConstraintsExpressionParserRuleCall_3_0_4_1_0()); }
	ruleExpression{ after(grammarAccess.getSolitaryFeatureAccess().getConstraintsExpressionParserRuleCall_3_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__ConstraintsAssignment_3_0_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getConstraintsExpressionParserRuleCall_3_0_4_3_1_0()); }
	ruleExpression{ after(grammarAccess.getSolitaryFeatureAccess().getConstraintsExpressionParserRuleCall_3_0_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SolitaryFeature__ConstraintsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSolitaryFeatureAccess().getConstraintsExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getSolitaryFeatureAccess().getConstraintsExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__InclusiveAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getInclusiveAnyKeyword_1_0()); }
(
{ before(grammarAccess.getGroupAccess().getInclusiveAnyKeyword_1_0()); }

	'any' 

{ after(grammarAccess.getGroupAccess().getInclusiveAnyKeyword_1_0()); }
)

{ after(grammarAccess.getGroupAccess().getInclusiveAnyKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__GroupedFeaturesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroupedFeaturesGroupedFeatureParserRuleCall_2_0()); }
	ruleGroupedFeature{ after(grammarAccess.getGroupAccess().getGroupedFeaturesGroupedFeatureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__GroupedFeaturesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroupedFeaturesGroupedFeatureParserRuleCall_3_1_0()); }
	ruleGroupedFeature{ after(grammarAccess.getGroupAccess().getGroupedFeaturesGroupedFeatureParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getGroupedFeatureAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__TypeAssignment_2_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getTypeSimpleTypeEnumRuleCall_2_0_1_1_0()); }
	ruleSimpleType{ after(grammarAccess.getGroupedFeatureAccess().getTypeSimpleTypeEnumRuleCall_2_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__GroupsAssignment_2_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getGroupsGroupParserRuleCall_2_0_2_0_0()); }
	ruleGroup{ after(grammarAccess.getGroupedFeatureAccess().getGroupsGroupParserRuleCall_2_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__GroupsAssignment_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getGroupsGroupParserRuleCall_2_0_2_1_0()); }
	ruleGroup{ after(grammarAccess.getGroupedFeatureAccess().getGroupsGroupParserRuleCall_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__FeaturesAssignment_2_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getFeaturesSolitaryFeatureParserRuleCall_2_0_3_0_0()); }
	ruleSolitaryFeature{ after(grammarAccess.getGroupedFeatureAccess().getFeaturesSolitaryFeatureParserRuleCall_2_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__FeaturesAssignment_2_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getFeaturesSolitaryFeatureParserRuleCall_2_0_3_1_0()); }
	ruleSolitaryFeature{ after(grammarAccess.getGroupedFeatureAccess().getFeaturesSolitaryFeatureParserRuleCall_2_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__ConstraintsAssignment_2_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getConstraintsExpressionParserRuleCall_2_0_4_1_0()); }
	ruleExpression{ after(grammarAccess.getGroupedFeatureAccess().getConstraintsExpressionParserRuleCall_2_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__ConstraintsAssignment_2_0_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getConstraintsExpressionParserRuleCall_2_0_4_3_1_0()); }
	ruleExpression{ after(grammarAccess.getGroupedFeatureAccess().getConstraintsExpressionParserRuleCall_2_0_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupedFeature__ConstraintsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupedFeatureAccess().getConstraintsExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getGroupedFeatureAccess().getConstraintsExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperatorLogicalOperatorEnumRuleCall_1_1_0()); }
	ruleLogicalOperator{ after(grammarAccess.getExpressionAccess().getOperatorLogicalOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RexpAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRexpLogical2OperationParserRuleCall_1_2_0()); }
	ruleLogical2Operation{ after(grammarAccess.getExpressionAccess().getRexpLogical2OperationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical2Operation__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical2OperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); }
	ruleCompareOperator{ after(grammarAccess.getLogical2OperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical2Operation__RexpAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical2OperationAccess().getRexpBinaryOperationParserRuleCall_1_2_0()); }
	ruleBinaryOperation{ after(grammarAccess.getLogical2OperationAccess().getRexpBinaryOperationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperationAccess().getOperatorArithmicOperatorEnumRuleCall_1_1_0()); }
	ruleArithmicOperator{ after(grammarAccess.getBinaryOperationAccess().getOperatorArithmicOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__RexpAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperationAccess().getRexpAtomicExpParserRuleCall_1_2_0()); }
	ruleAtomicExp{ after(grammarAccess.getBinaryOperationAccess().getRexpAtomicExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getOperatorUnaryOperatorEnumRuleCall_0_0()); }
	ruleUnaryOperator{ after(grammarAccess.getUnaryOperationAccess().getOperatorUnaryOperatorEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__ExpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getExpAtomicExpParserRuleCall_1_0()); }
	ruleAtomicExp{ after(grammarAccess.getUnaryOperationAccess().getExpAtomicExpParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getValueEIntParserRuleCall_0()); }
	ruleEInt{ after(grammarAccess.getNumberAccess().getValueEIntParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getRefFeatureCrossReference_0()); }
(
{ before(grammarAccess.getIdentifierAccess().getRefFeatureEStringParserRuleCall_0_1()); }
	ruleEString{ after(grammarAccess.getIdentifierAccess().getRefFeatureEStringParserRuleCall_0_1()); }
)
{ after(grammarAccess.getIdentifierAccess().getRefFeatureCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


